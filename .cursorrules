* Only modify code directly relevant to the specific request. Avoid changing unrelated functionality.
* Break problems into smaller steps. Think through each step separately before implementing.
* Always provide a complete PLAN with REASONING based on evidence from code and logs before making changes.
* Explain your OBSERVATIONS clearly, then provide REASONING to identify the exact issue. 
* Add console logs when needed to gather more information.
* Use the tools that the framework provides. If there is a native way to do something in the framework, do it that way
* Scan the whole project to better understand structure
* Follow the same dark UI-style
* Don't break the code that is used in multiple modules
* Dont restart the server yourself, let the user do it
* Test everything thoroughly and think of edge cases
* Templates should always have unique names
* Never finish until you tested your code and can verify its working
* Use PowerShell, we are on Windows
* We have sqlite3 installed, so use that for the database
* We have Ollama installed, so use that for the LLM
* Remove all temporary code at the end, make sure the app is functional
* Never commit to git yourself until I ask explicitly
* Use daipendency to extract narrative and API documentation from a library and output it in an LLM-friendly format